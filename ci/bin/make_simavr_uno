#!/bin/bash -x

if [ "$(type -t dir)" != "function" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/dir
fi

if [ "$(type -t os)" != "function" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/os
fi

if [ "$(type -t versions)" != "function" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/versions
fi

if [ "$(type -t cache_simavr)" != "function" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/cache_simavr
fi

if [ "$(type -t avr_root)" != "cache_ide" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/cache_ide
fi

if [ "$(type -t avr_root)" != "avr_root" ]
then
    . "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"/avr_root
fi

make_simavr_uno() {
    DIR="$(dir "$@")"
    OS="$(os "$@")"
    VERSIONS="$(versions "$@")"

    while [ $# -gt 0 ]
    do
        case "$1"
        in
            --reload=*)    RELOAD=${1#--reload=}; shift;;
            --*=*)         shift;;
            --)            shift; break;;
            *)             break;;
        esac
    done

    if [ ! -d "$DIR/cache/simavr" -o "$RELOAD" = "true" ]
    then
	if ! cache_simavr --dir="$DIR" --reload="$RELOAD"
	then
	    echo "could not cache simavr"
	    exit 1
	fi
    fi
    
    for VERSION in $VERSIONS
    do
	if [ -x "$DIR/cache/${VERSION}-${OS}/simavr/uno" -a "$RELOAD" != "true" ]
	then
	   continue
	fi

	mkdir -p "$DIR/cache/$VERSION-$OS/simavr"
	
	AVR_ROOT="$(avr_root --dir="$DIR" --os="$OS" --version="$VERSION")"
	if [ ! -d "$AVR_ROOT" ]
	then
	    cache_ide --dir="$DIR" --os="$OS" --version="$VERSION" --reload="$RELOAD"
	fi
	if [ ! -d "$AVR_ROOT" ]
	then
	    echo "could not access avr_root='$AVR_ROOT'"
	    exit 1
	fi

	if [ ! -d "$DIR/cache/${VERSION}-${OS}/simavr" -o "$RELOAD" = "true" ]
	then
	    /bin/rm -rf "$DIR/cache/${VERSION}-${OS}/simavr"
	    mkdir -p "$DIR/cache/${VERSION}-${OS}/simavr/repo"
	    tar -C "$DIR/cache/simavr" -cf - . | tar -C "$DIR/cache/${VERSION}-${OS}/simavr/repo" -xf -
	fi

	mkdir -p "$DIR/cache/${VERSION}-${OS}/simavr"
	if PATH="$AVR_ROOT/bin:$PATH" make -B -C "$DIR/cache/${VERSION}-${OS}/simavr/repo" clean build-simavr
	then
	    if PATH="$AVR_ROOT/bin:$PATH" make -B -C "$DIR/cache/${VERSION}-${OS}/simavr/repo/examples/board_simduino" clean all
	    then
		cp "$DIR/cache/${VERSION}-${OS}/simavr/repo/examples/board_simduino/"obj*/simduino.elf "$DIR/cache/${VERSION}-${OS}/simavr/uno"
	    fi
	fi
	if [ ! -x "$DIR/cache/${VERSION}-${OS}/simavr/uno" ]
	then
	    echo "build failed."
	    exit 1
	fi
    done
}
	
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
    make_simavr_uno "$@"
fi
